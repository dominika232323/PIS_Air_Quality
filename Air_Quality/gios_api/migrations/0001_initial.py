# Generated by Django 5.1.3 on 2025-01-18 14:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AirQualityLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'air_quality_levels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'communes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'districts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('formula', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'params',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'provinces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AirQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculate_date', models.DateField()),
                ('source_date', models.DateField()),
                ('index_status', models.BooleanField()),
                ('critical_param', models.CharField(max_length=50)),
                ('air_quality_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.airqualitylevel')),
            ],
            options={
                'db_table': 'air_quality',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.city')),
            ],
            options={
                'db_table': 'addresses',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='city',
            name='commune',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.commune'),
        ),
        migrations.AddField(
            model_name='commune',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.district'),
        ),
        migrations.CreateModel(
            name='AirQualityPollutant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculate_date', models.DateField()),
                ('source_date', models.DateField()),
                ('air_quality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.airquality')),
                ('air_quality_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.airqualitylevel')),
                ('parameter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.parameter')),
            ],
            options={
                'db_table': 'air_quality_pollutants',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.province'),
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.parameter')),
            ],
            options={
                'db_table': 'sensors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('parameter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.parameter')),
                ('sensor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.sensor')),
            ],
            options={
                'db_table': 'measurements',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.address')),
            ],
            options={
                'db_table': 'stations',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='sensor',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.station'),
        ),
        migrations.AddField(
            model_name='airquality',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gios_api.station'),
        ),
    ]
